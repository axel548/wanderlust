name: "Deploy to EKS"
description: "Deploy to EKS"

inputs:
  aws_id:
    description: "AWS ACCESS KEY ID"
    required: true
  aws_key:
    description: "AWS SECRET ACCESS KEY"
    required: true
  jwt_name:
    description: "jwt_name"
    required: true
  db_uri:
    description: "db_uri"
    required: true
  google_client_id:
    description: "google_client_id"
    required: true
  google_client_secret:
    description: "google_client_secret"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_id }}
        aws-secret-access-key: ${{ inputs.aws_key }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name eksWanderlust --region us-east-1
      shell: bash

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml

            jwt_name='jwt-secret'
            db_uri='mongodb-secret'
            google_client_id='googleclientid-secret'
            google_client_secret='googleclientsecret-secret'

            # kubectl delete secret mongodb-secret -n wanderlustdevops
            echo $JWTSECRET > ./$jwt_name.txt
            echo $MONGODBSECRET > ./$db_uri.txt
            echo $GOOGLECLIENTID > ./$google_client_id.txt
            echo $GOOGLECLIENTSECRET > ./$google_client_secret.txt

            kubectl create secret generic $jwt_name --from-file=./$jwt_name.txt  -n $eks_namespace
            kubectl create secret generic $db_uri --from-file=./$db_uri.txt -n $eks_namespace
            kubectl create secret generic $google_client_id --from-file=./$google_client_id.txt  -n $eks_namespace
            kubectl create secret generic $google_client_secret --from-file=./$google_client_secret.txt -n $eks_namespace

            kubectl get secrets -n $eks_namespace


        kubectl apply -f k8s/deployments/
        kubectl apply -f k8s/services/
      shell: bash